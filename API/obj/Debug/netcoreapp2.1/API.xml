<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.Controllers.Customer.CustomerController">
            <summary>
            Controlador para gestionar los clientes.
            </summary>
        </member>
        <member name="M:API.Controllers.Customer.CustomerController.#ctor(Business.CustomerService,Business.BaseService{DataAccess.Data.Customer})">
            <summary>
            Constructor para inyectar los servicios necesarios.
            </summary>
            <param name="customerService">Servicio para gestionar operaciones relacionadas con clientes.</param>
            <param name="baseService">Servicio base genérico para operaciones CRUD.</param>
        </member>
        <member name="M:API.Controllers.Customer.CustomerController.GetAll">
            <summary>
            Obtiene todos los clientes.
            </summary>
            <returns>Una lista de todos los clientes.</returns>
        </member>
        <member name="M:API.Controllers.Customer.CustomerController.Create(DataAccess.Data.Customer)">
            <summary>
            Crea un nuevo cliente.
            </summary>
            <param name="entity">El cliente a crear.</param>
            <returns>El cliente creado.</returns>
        </member>
        <member name="M:API.Controllers.Customer.CustomerController.Update(DataAccess.Data.Customer)">
            <summary>
            Actualiza un cliente existente.
            </summary>
            <param name="entity">El cliente con la información actualizada.</param>
            <returns>El cliente actualizado.</returns>
        </member>
        <member name="M:API.Controllers.Customer.CustomerController.Delete(System.Int32)">
            <summary>
            Elimina un cliente por su Id.
            </summary>
            <param name="id">El Id del cliente a eliminar.</param>
            <returns>Mensaje de éxito o error.</returns>
        </member>
        <member name="T:API.Controllers.Post.PostController">
            <summary>
            Controlador para gestionar los posts.
            </summary>
        </member>
        <member name="M:API.Controllers.Post.PostController.#ctor(Business.PostService)">
            <summary>
            Constructor para inyectar el servicio de posts.
            </summary>
            <param name="postService">Servicio para gestionar operaciones sobre los posts.</param>
        </member>
        <member name="M:API.Controllers.Post.PostController.GetAll">
            <summary>
            Obtiene todos los posts.
            </summary>
            <returns>Una lista de todos los posts.</returns>
        </member>
        <member name="M:API.Controllers.Post.PostController.Create(DataAccess.Data.Post)">
            <summary>
            Crea un nuevo post.
            </summary>
            <param name="entity">El post a crear.</param>
            <returns>El post creado.</returns>
        </member>
        <member name="M:API.Controllers.Post.PostController.CreateMultiplePosts(System.Collections.Generic.List{DataAccess.Data.Post})">
            <summary>
            Crea múltiples posts.
            </summary>
            <param name="request">Lista de posts a crear.</param>
            <returns>Mensaje de éxito.</returns>
        </member>
        <member name="M:API.Controllers.Post.PostController.Update(DataAccess.Data.Post)">
            <summary>
            Actualiza un post existente.
            </summary>
            <param name="entity">El post con la información actualizada.</param>
            <returns>El post actualizado.</returns>
        </member>
        <member name="M:API.Controllers.Post.PostController.Delete(System.Int32)">
            <summary>
            Elimina un post existente.
            </summary>
            <param name="id">El Id del post a eliminar.</param>
            <returns>Mensaje de éxito o error.</returns>
        </member>
    </members>
</doc>
